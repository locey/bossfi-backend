version: '3.8'

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: bossfi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-bossfi}
      POSTGRES_USER: ${DB_USER:-bossfi_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - /opt/bossfi/logs:/var/log/postgresql
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - bossfi-network
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.2'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-bossfi_user} -d ${DB_NAME:-bossfi}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: bossfi-redis
    restart: unless-stopped
    command: >
      redis-server 
      --appendonly yes 
      --maxmemory 128mb 
      --maxmemory-policy allkeys-lru
      --save 900 1
      --save 300 10
      --save 60 10000
    volumes:
      - redis_data:/data
      - /opt/bossfi/logs:/var/log/redis
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - bossfi-network
    deploy:
      resources:
        limits:
          memory: 128M
          cpus: '0.2'
        reservations:
          memory: 64M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # BossFi 后端服务
  bossfi-backend:
    build:
      context: ..
      dockerfile: Dockerfile
      args:
        - GO_VERSION=1.21
    image: bossfi/backend:latest
    container_name: bossfi-backend
    restart: unless-stopped
    environment:
      # 数据库配置
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-bossfi_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME:-bossfi}
      - DB_SSLMODE=disable
      
      # Redis 配置
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      
      # JWT 配置
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_HOURS=${JWT_EXPIRE_HOURS:-24}
      
      # 应用配置
      - PORT=8080
      - GIN_MODE=release
      - LOG_LEVEL=${LOG_LEVEL:-info}
      
      # 区块链配置
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - PRIVATE_KEY=${PRIVATE_KEY}
      
      # 定时任务配置
      - CRON_ENABLED=${CRON_ENABLED:-true}
      - BLOCKCHAIN_SYNC_INTERVAL=${BLOCKCHAIN_SYNC_INTERVAL:-*/5 * * * *}
      
      # 时区配置
      - TZ=Asia/Shanghai
    volumes:
      - /opt/bossfi/logs:/app/logs
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - bossfi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.3'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: bossfi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /opt/bossfi/ssl:/etc/nginx/ssl:ro
      - /opt/bossfi/logs:/var/log/nginx
    networks:
      - bossfi-network
    depends_on:
      - bossfi-backend
    deploy:
      resources:
        limits:
          memory: 64M
          cpus: '0.2'
        reservations:
          memory: 32M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

# 数据卷
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/bossfi/data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/bossfi/data/redis

# 网络
networks:
  bossfi-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 