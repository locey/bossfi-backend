version: '3.8'

# 指定环境变量文件位置
env_file:
  - ../env.prod

services:
  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    container_name: bossfi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: bossfi
      POSTGRES_USER: bossfi_user
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 400M
          cpus: '0.5'
        reservations:
          memory: 200M
          cpus: '0.2'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bossfi_user -d bossfi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: bossfi-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 80mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          memory: 100M
          cpus: '0.2'
        reservations:
          memory: 50M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # BossFi 后端服务
  bossfi-backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: bossfi-backend
    restart: unless-stopped
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=bossfi_user
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=bossfi
      - DB_SSLMODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRE_HOURS=24
      - PORT=8080
      - GIN_MODE=release
      - LOG_LEVEL=info
      - BLOCKCHAIN_RPC_URL=${BLOCKCHAIN_RPC_URL}
      - CONTRACT_ADDRESS=${CONTRACT_ADDRESS}
      - CRON_ENABLED=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    deploy:
      resources:
        limits:
          memory: 300M
          cpus: '0.8'
        reservations:
          memory: 150M
          cpus: '0.3'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: bossfi-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      - bossfi-backend
    deploy:
      resources:
        limits:
          memory: 50M
          cpus: '0.2'
        reservations:
          memory: 25M
          cpus: '0.1'

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    name: bossfi-network 